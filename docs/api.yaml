swagger: '2.0'
info:
  title: Junket API
  description: Private API for the wejunket.com mobile apps. 
  version: 1.0.0
host: api.wejunket.com
basePath: /mobile
schemes:
 - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
tags:
- name: auth
- name: tours

paths:
  /auth/session:
    get:
      tags:
      - auth
      summary: Profile
      description: Get the logged in user's profile information.
      operationId: session
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/AuthToken'
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: '#/responses/NoToken'
        401:
          $ref: '#/responses/Unauthroized'
        500:
          $ref: '#/responses/UnexpectedError'
      
  /auth/refresh:
    get:
      tags:
        - auth
      summary: Refresh JWT Token
      description: Submit an expired JWT token and get a new active one.
      operationId: refresh
      produces:
        - application/json
      parameters:
      - $ref: '#/parameters/AuthToken'
      security:
        - Bearer: []
      responses:
        204:
          description: OK
          headers:
            Authorization:
              type: string
              description: The new JWT bearer auth token.
        400:
          $ref: '#/responses/NoToken'
        401:
          $ref: '#/responses/Unauthroized'
        500:
          $ref: '#/responses/UnexpectedError'

  /auth/signup:
    post:
      tags:
      - auth
      summary: Sign up
      description: Register for an account.
      operationId: signup
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - in: body
          name: user
          description: The user to create.
          schema:
            required:
              - name
              - email
              - password
              - password_confirmation
            properties:
              name:
                type: string
                description: The user's first and/or last name.
                example: John Doe
                maximum: 255
              email:
                type: string
                example: client@test.com
                description: The user's email address.
                maximum: 255
              password:
                type: string
                example: secret
                description: The user's password.
                minimum: 6
              password_confirmation:
                type: string
                example: secret
                description: Confirmation of the user's password.
                minimum: 6
      responses:
        200:
          description: Successful registration
          schema: 
            type: object
            properties:
              user:
                $ref: '#/definitions/User'
              token:
                type: string
                description: JWT Auth token to be used for Bearer authentication header.
        422:
          $ref: '#/responses/ValidationError'
        401:
          $ref: '#/responses/Unauthroized'
        500:
          $ref: '#/responses/UnexpectedError'

  /auth/login:
    post:
      tags:
      - auth
      summary: Login
      description: Submit credentials and get the JWT auth token.
      operationId: login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - in: body
          name: credentials
          description: The user's logim credentials.
          schema:
            required:
              - email
              - password
            properties:
              email:
                type: string
                example: client@test.com
                description: The user's email address.
              password:
                type: string
                example: secret
                description: The user's password.
      responses:
        200:
          description: Successful login
          schema: 
            type: object
            properties:
              user:
                $ref: '#/definitions/User'
              token:
                type: string
                description: JWT Auth token to be used for Bearer authentication header.
        422:
          $ref: '#/responses/ValidationError'
        401:
          $ref: '#/responses/Unauthroized'
        500:
          $ref: '#/responses/UnexpectedError'
          
  /tours:
    get:
      tags:
      - tours
      summary: Tour listing
      description: Get a paginated listing of all published Tours.
      operationId: tours
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/AuthToken'
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                description: Array of Tours.
                type: array
                items:
                  $ref: '#/definitions/Tour'
              links:
                description: Pagination links
                $ref: '#/definitions/PaginationLinks'
              meta:
                description: Pagination meta
                $ref: '#/definitions/PaginationMeta'
        400:
          $ref: '#/responses/NoToken'
        401:
          $ref: '#/responses/Unauthroized'
        500:
          $ref: '#/responses/UnexpectedError'
          
  /tours/{tour_id}:
    get:
      tags:
      - tours
      summary: Get Tour details
      description: Returns all of the information for the given tour, including the route points and the stops.
      operationId: tour
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/AuthToken'
      - in: path
        name: tour_id
        description: ID of the desired Tour
        required: true
        type: integer
        format: int64
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              tour:
                description: The information for the Tour.
                $ref: '#/definitions/Tour'
              stops:
                description: All of the Stops on the Tour.
                type: array
                items:
                  $ref: '#/definitions/Stop'
              route:
                description: An array of points that make up the Tour's route.
                type: array
                items:
                  $ref: '#/definitions/TourRoutePoint'
        400:
          $ref: '#/responses/NoToken'
        401:
          $ref: '#/responses/Unauthroized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/UnexpectedError'

parameters:
  AuthToken:
    in: header
    name: Authorization
    type: string
    required: true
    description: |
      JTW auth bearer token in the format of "Authorization: Bearer {token_here}"

responses:
  ValidationError:
    description: Validation errors in the request body.
    schema:
      type: object
      properties:
          message:
            type: string
            description: The error message.
            example: The given data was invalid.
          errors:
            type: object
            description: A list of fields and their corresponding errors.

  NotFound:
    description: Object not found.
    schema:
      type: object
      properties:
        message:
          type: string
          description: The error message.
          example: Object not found
          
  NoToken:
    description: Invalid auth token provided.
    schema:
      type: object
      properties:
        message: 
          type: string
          description: The error message.
          example: token_not_provided
          
  Unauthroized:
    description: Unauthorized.  Invalid or expired auth token or credentials provided.
    schema:
      type: object
      properties:
        message: 
          type: string
          description: The error message.
          example: token_invalid
    
  UnexpectedError:
    description: An unexpected error occurred.
    schema:
      type: object
      properties:
        message: 
          type: string
          description: The error message.
    
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
        description: The user's first and last name.
        example: John Doe
      email:
        type: string
        description: The user's email address.
        example: client@test.com
      role:
        type: string
        enum: [user, client, admin]
        description: |
          The user's role in the system.
          user - Regular mobile user
          client - Tour creator, has access to the CMS but can also be a mobile user.
          admin - System admin, has access to the Admin Panel but can also be a mobile user. 
        example: user
        
  Tour:
    type: object
    required:
      - id
      - user_id
      - title
      - pricing_type
      - type
    properties:
      id:
        type: integer
        format: int32
      user_id:
        type: integer
        format: int32
      title:
        type: string
        description: The name of the tour
        example: San Fransico Ghost Tour
      description:
        type: string
        description: The full text description of the Tour.
        example: Explore the haunted history of Williamsburg with this guided audio tour app from www.colonialghosts.com ! Listen to the tour on your mobile device with a friend, or all alone...if you dare!
      pricing_type:
        type: string
        format: enum
          - free
          - premium
        description: Pricing model for the Tour, either free or premium (paid).
        example: premium
      type:
        type: string
        format: enum
          - indoor
          - outdoor
          - adventure
        description: The type of Tour.
        example: adventure
      stops_count:
        type: integer
        format: int32
        description: The number of Stops on the Tour.
        example: 31
      location:
        $ref: '#/definitions/Location'
        description: The location of the Tour, including GPS coordinates.
      facebook_url: 
        type: string
        description: Facebook URL
        example: https://www.facebook.com/example-page
      twitter_url: 
        type: string
        description: Twitter URL
        example: https://www.twitter.com/example-page
      instagram_url: 
        type: string
        description: Instagram URL
        example: https://www.instagram.com/example-page
      video_url:
        type: string
        description: Youtube video URL for the tour.
        example: https://youtu.be/Bey4XXJAqS8
      has_prize:
        type: boolean
        description: Whether the Tour offers a prize or not.
        example: true
      prize_details:
        type: string
        description: The details and description of the Tour prize.
        example: $10 Giftcard
      prize_instructions:
        type: string
        description: The instructions for how to redeem the Tour prize.
        example: Goto the local store to redeem.
      trophy_image:
        type: string
        description: Custom trophy image.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.png
      start_point:
        type: integer
        format: int32
        description: The ID of the first stop on the Tour.
        example: 15
      start_message:
        type: string
        description: The message to be displayed when a User starts the Tour.
        example: Welcome to Ghost Tour
      start_video_url:
        type: string
        description: The Youtube video URL of the video that is to be displayed when a User starts the Tour.
        example: https://youtu.be/Bey4XXJAqS8
      start_image:
        type: string
        description: The image to be displayed when a User starts the Tour.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.jpg
      end_point:
        type: integer
        format: int32
        description: The ID of the last stop on the Tour.
        example: 35
      end_message:
        type: string
        description: The message to be displayed when a User completes the Tour.
        example: Well done!
      end_video_url:
        type: string
        description: The Youtube video URL of the video that is to be displayed when a User completes the Tour.
        example: https://youtu.be/Bey4XXJAqS8
      end_image:
        type: string
        description: The image to be displayed when a User completes the Tour.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.jpg
      main_image:
        type: string
        description: Tour cover image.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.jpg
      image1:
        type: string
        description: First Tour image.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.jpg
      image2:
        type: string
        description: Second Tour image.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.jpg
      image3:
        type: string
        description: Third Tour image.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.jpg
      pin_image:
        type: string
        description: Custom map pin icon.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.png
      intro_audio:
        type: string
        description: Intro audio MP3 path.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.mp3
      background_audio:
        type: string
        description: Background audio MP3 path.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.mp3
      created_at:
        type: string
        format: date-time
        description: Timestamp of when the Tour was created.
        example: '2018-07-21 13:53:20'
      updated_at:
        type: string
        format: date-time
        description: Timestamp of when the Tour was updated.
        example: '2018-07-21 13:53:20'
      published_at:
        type: string
        format: date-time
        description: Timestamp of when the Tour was published.
        example: '2018-07-21 13:53:20'
  
  Stop:
    type: object
    required:
      - id
      - tour_id
      - order
      - title
      - play_radius
      - is_multiple_choice
      - created_at
    properties:
      id:
        type: integer
        format: int32
        description: The ID of the Stop.
        example: 52
      tour_id:
        type: integer
        format: int32
        description: The ID of the Tour the Stop belongs to.
        example: 99
      order:
        type: integer
        format: int32
        description: The position of the stop in order.
        example: 1
      title:
        type: string
        description: The title of the Stop.
        example: Tyler Garden
      description:
        type: string
        description: The description of the Stop.
        example: Welcome to the Tyler Garden. The Tyler Garden was dedicated in 2004 and shows three busts of prominent members of the Tyler family.
      play_radius:
        type: number
        format: double
        description: The radius (in meters) that should trigger being 'near' a stop and media should start playing.
        example: 15.5
      main_image:
        type: string
        description: Stop cover image.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.jpg
      image1:
        type: string
        description: First Stop image.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.jpg
      image2:
        type: string
        description: Second Stop image.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.jpg
      image3:
        type: string
        description: Third Stop image.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.jpg
      intro_audio:
        type: string
        description: Intro audio MP3 path.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.mp3
      background_audio:
        type: string
        description: Background audio MP3 path.
        example: http://media.wejunket.com/images/4fd1b212d98168645c0dce52bdb05189.mp3
      is_multiple_choice:
        type: boolean
        description: Boolean to determine whether the stop question is multiple choice or simple text answer.  Only for 'adventure' Tours.
        example: true
      question:
        type: string
        description: The question to prompt the User to allow access to the next stop on the Tour.  Only for 'adventure' Tours.
        example: 'What did you see?'
      question_answer:
        type: string
        description: The correct answer to the question (non multiple choice).  Only for 'adventure' Tours.
        example: A Ghost
      question_success:
        type: string
        description: The message to prompt the User when the question is answered successfully.  Only for 'adventure' Tours.
        example: Correct!  Proceed to the next stop.
      next_stop:
        type: integer
        format: int32
        description: The ID of the next stop on the Tour to give the User when a question (non multiple choice) is successfully answered.  Only for 'adventure' Tours.
        example: 5
      choices:
        type: array
        description: The multiple choice questions.  Only for 'adventure' Tours that are marked multiple choice.
        items:
          $ref: '#/definitions/StopChoice'
      routes:
        type: array
        description: An array of points that make up the route to the next Stop from this Stop.
        items:
          $ref: '#/definitions/StopRoutePoint'
      created_at:
        type: string
        format: date-time
        description: Timestamp of when the Stop was created.
        example: '2018-07-21 13:53:20'
      updated_at:
        type: string
        format: date-time
        description: Timestamp of when the Stop was updated.
        example: '2018-07-21 13:53:20'

  StopChoice:
    type: object
    required:
      - order
      - answer
      - next_stop
    properties:
      order:
        type: integer
        format: int32
        description: The position of the choice in order.
        example: 1
      answer:
        type: string
        description: The multiple choice answer.
        example: 'A Ghost'
      next_stop:
        type: integer
        format: int32
        description: The ID of the next stop on the Tour if the User selects this choice.
        example: 5

  StopRoutePoint:
    type: object
    required:
      - next_stop_id
      - order
      - latitude
      - longitude
    properties:
      next_stop:
        type: integer
        format: int32
        description: The ID of the stop that the route point goes to.
      order:
        type: integer
        format: int32
        description: The position of the route point in order.
        example: 1
      latitude:
        type: number
        format: float
        example: 40.7395956
      longitude:
        type: number
        format: float
        example: -73.9913727

  TourRoutePoint:
    type: object
    required:
      - order
      - latitude
      - longitude
    properties:
      order:
        type: integer
        format: int32
        description: The position of the route point in order.
        example: 1
      latitude:
        type: number
        format: float
        example: 40.7395956
      longitude:
        type: number
        format: float
        example: -73.9913727

  Location:
    type: object
    properties:
      address1:
        type: string
        description: Address line 1
        example: 150 5th Avenue
      address2:
        type: string
        description: Address line 2
        example: Unit 405
      city:
        type: string
        description: City
        example: New York
      state:
        type: string
        description: State
        example: NY
      zipcode:
        type: string
        description: Postal code
        example: 10001
      latitude:
        type: number
        format: float
        description: Latitude coordinate
        example: 40.7395956
      longitude:
        type: number
        format: float
        description: Longitude coordinate
        example: -73.9913727

  PaginationLinks:
    type: object
    properties:
      first:
        type: string
        description: URL to fetch the first page of records.
        example: http://api.wejunket.com/mobile/tours?page=1
      last:
        type: string
        description: URL to fetch the last page of records.
        example: http://api.wejunket.com/mobile/tours?page=99
      prev:
        type: string
        description: URL to fetch the previous page of records.
        example: http://api.wejunket.com/mobile/tours?page=1
      next:
        type: string
        description: URL to fetch the next page of records.
        example: http://api.wejunket.com/mobile/tours?page=2

  PaginationMeta:
    type: object
    properties:
      current_page:
        type: integer
        format: int32
        description: The current page number.
        example: 2
      from:
        type: integer
        format: int32
        description: The position of the first item in the resultset.
        example: 16
      last_page:
        type: integer
        format: int32
        description: The number of the last page.
        example: 99
      path:
        type: string
        description: The base URL for the resource.
        example: http://api.wejunket.com/mobile/tours
      per_page:
        type: integer
        format: int32
        description: The number of results shown per page.
        example: 15
      to:
        type: integer
        format: int32
        description: The position of the last item in the resultset.
        example: 30
      total:
        type: integer
        format: int32
        description: The total number of records.
        example: 1481
      